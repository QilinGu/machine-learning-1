package bayes_network.builders;

import bayes_network.BayesianNetwork;
import bayes_network.BNNode;


import data.DataSet;
import data.attribute.Attribute;

/**
 * Builds a Bayesian Network with a Naive Bayes Structure
 * 
 * @author Matthew Bernstein - matthewb@cs.wisc.edu
 */
public class NaiveBayesBuilder extends NetworkBuilder
{
	/**
	 * Builds Bayesian network with a Naive bayes structure.
	 * 
	 * @param data the data set used to construct the parameters
	 */
	@Override
	public BayesianNetwork buildNetwork(DataSet data, Integer laplaceCount)
	{
		BayesianNetwork net = super.buildNetwork(data, laplaceCount);
		net.setNetInference(BayesianNetwork.NAIVE_BAYES);
		
		// Get the Node that represents the class attribute
		Attribute classAttr = data.getClassAttribute();
		BNNode classAttrNode = net.getNode(classAttr);
		
		// Create edges from the class Node to all other nodes
		for (BNNode node : net.getNodes())
		{
			if (!node.equals( classAttrNode ))
			{
				net.createEdge(classAttrNode, node);
			}
		}
		
		super.buildCPD(net, data);
		
		return net;
	}	
}
